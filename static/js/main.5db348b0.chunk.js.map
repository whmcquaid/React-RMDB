{"version":3,"sources":["components/images/no_image.jpg","components/images/reactMovie_logo.png","components/images/tmdb_logo.svg","components/styles/StyledHeader.js","components/elements/Header.js","config.js","components/styles/StyledHeroImage.js","components/elements/HeroImage.js","components/styles/StyledSearchBar.js","components/elements/SearchBar.js","components/styles/StyledGrid.js","components/elements/Grid.js","components/styles/StyledMovieThumb.js","components/elements/MovieThumb.js","components/styles/StyledLoadMoreBtn.js","components/elements/LoadMoreBtn.js","components/styles/StyledSpinner.js","components/elements/Spinner.js","components/Home.js","components/hooks/useHomeFetch.js","components/styles/StyledNavigation.js","components/elements/Navigation.js","components/styles/StyledMovieInfo.js","components/elements/MovieInfo.js","components/styles/StyledMovieInfoBar.js","helpers.js","components/elements/MovieInfoBar.js","components/styles/StyledActor.js","components/elements/Actor.js","components/Movie.js","components/hooks/useMovieFetch.js","components/NotFound.js","components/styles/GlobalStyle.js","components/App.js","index.js"],"names":["module","exports","StyledHeader","styled","div","StyledRMDBLogo","img","StyledTMDBLogo","Header","className","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","SEARCH_BASE_URL","POPULAR_BASE_URL","IMAGE_BASE_URL","StyledHeroImage","props","image","HeroImage","title","text","StyledSearchBar","StyledSearchBarContent","SearchBar","callback","useState","state","setState","timeOut","useRef","name","size","type","placeholder","onChange","event","value","target","clearTimeout","current","setTimeout","prototype","PropTypes","func","StyledGrid","StyledGridContent","Grid","header","children","StyledMovieThumb","MovieThumb","movieId","clickable","string","number","bool","StyledLoadMoreBtn","button","LoadMoreBtn","onClick","StyledSpinner","Spinner","Home","searchTerm","setSearchTerm","movies","loading","setLoading","error","setError","fetchMovies","endpoint","a","isLoadMore","search","fetch","json","result","prev","results","heroImage","currentPage","page","totalPages","total_pages","console","log","useEffect","sessionStorage","homeState","JSON","parse","setItem","stringify","useHomeFetch","backdrop_path","original_title","overview","map","movie","key","id","poster_path","NoImage","movieName","searchEndpoint","popularEndpoint","StyledNavigation","Navigation","StyledMovieInfo","backdrop","MovieInfo","vote_average","directors","length","element","credit_id","StyledMovieInfoBar","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","MovieInfoBar","time","budget","revenue","hours","Math","floor","mins","calcTime","StyledActor","Actor","actor","profile_path","character","Movie","useParams","fetchData","useCallback","creditsEndpoint","creditsResult","crew","filter","member","job","actors","cast","localStorage","useMovieFetch","runtime","NotFound","GlobalStyle","createGlobalStyle","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5db348b0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no_image.31f5bb1d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/reactMovie_logo.08494abf.png\";","module.exports = __webpack_public_path__ + \"static/media/tmdb_logo.30cd724b.svg\";","import styled from 'styled-components';\n\nexport const StyledHeader = styled.div`\n  background: #1c1c1c;\n  padding: 0 20px;\n  box-sizing: border-box;\n\n  .header-content {\n    max-width: 1280px;\n    min-height: 120px;\n    padding: 20px 0px;\n    margin: 0 auto;\n    box-sizing: border-box;\n\n    @media screen and (max-width: 500px) {\n      max-width: 1280px;\n      min-height: 0px;\n    }\n  }\n`;\n\nexport const StyledRMDBLogo = styled.img`\n  width: 250px;\n  margin-top: 20px;\n\n  @media screen and (max-width: 500px) {\n    width: 150px;\n    margin-top: 5px;\n  }\n`;\n\nexport const StyledTMDBLogo = styled.img`\n  width: 122px;\n  margin-top: 25px;\n  float: right;\n\n  @media screen and (max-width: 500px) {\n    display: inline-block;\n    width: 80px;\n    margin-top: 0px;\n  }\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport RMDBLogo from '../images/reactMovie_logo.png';\nimport TMDBLogo from '../images/tmdb_logo.svg';\n\nimport { \n    StyledHeader, \n    StyledRMDBLogo, \n    StyledTMDBLogo\n} from '../styles/StyledHeader';\n\n// 1. Learn how to create a styled basic styled component\n// 2. Learn how to handle props in styled component\n// 3. Create a global style with styled components\n\nconst Header = () => (\n<StyledHeader>\n  <div className=\"header-content\">\n    <Link to=\"/React-RMDB/\">\n      <StyledRMDBLogo src={RMDBLogo} alt=\"rmdb-logo\" />\n    </Link>\n  \n    <StyledTMDBLogo src={TMDBLogo} alt=\"tmdb-logo\" />\n  </div>\n</StyledHeader>\n)\n\nexport default Header;","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '81b064108b3a6c232d05a5b768b190ef';\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport { \n  SEARCH_BASE_URL, \n  POPULAR_BASE_URL,\n  API_URL, API_KEY, \n  IMAGE_BASE_URL, \n  BACKDROP_SIZE, \n  POSTER_SIZE \n};\n","import styled from 'styled-components';\n\nexport const StyledHeroImage = styled.div`\n  background: ${props =>\n    `linear-gradient(\n      to bottom, rgba(0,0,0,0)\n      39%,rgba(0,0,0,0)\n      41%,rgba(0,0,0,0.65)\n      100%\n    ),\n    url('${props.image}'), #1c1c1c`};\n  background-size: 100%, cover !important;\n  background-position: center, center !important;\n  width: 100%;\n  height: 600px;\n  position: relative;\n  animation: animateHeroimage 1s;\n\n  .heroimage-content {\n    max-width: 1280px;\n    padding: 20px;\n    margin: 0 auto;\n  }\n\n  .heroimage-text {\n    z-index: 100;\n    max-width: 700px;\n    position: absolute;\n    bottom: 40px;\n    margin-right: 20px;\n    min-height: 100px;\n    background: rgba(0, 0, 0, 0);\n    color: #fff;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 38px;\n        color: #fff;\n      }\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      line-height: 26px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 16px;\n        line-height: 20px;\n        color: #fff;\n      }\n    }\n\n    @media screen and (max-width: 720px) {\n      max-width: 100%;\n    }\n  }\n\n  @keyframes animateHeroimage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { StyledHeroImage } from '../styles/StyledHeroImage';\n\nconst HeroImage = ({ image, title, text }) => (\n  <StyledHeroImage image={image}>\n    <div className=\"heroimage-content\">\n      <div className=\"heroimage-text\">\n        <h1>{title}</h1>\n        <p>{text}</p>\n      </div>\n    </div>\n  </StyledHeroImage>\n)\nHeroImage.propTypes = {\n  image: PropTypes.string,\n  title: PropTypes.string,\n  text: PropTypes.string,\n}\nexport default HeroImage;","import styled from 'styled-components';\n\nexport const StyledSearchBar = styled.div`\n  width: 100%;\n  height: 105px;\n  background: #1c1c1c;\n  padding: 25px 20px 0px 20px;\n  box-sizing: border-box;\n  color: #fff;\n`;\n\nexport const StyledSearchBarContent = styled.div`\n  max-width: 1280px;\n  width: 100%;\n  height: 55px;\n  background: #353535;\n  margin: 0 auto;\n  border-radius: 40px;\n  position: relative;\n  color: #fff;\n\n  .fa-search {\n    position: absolute;\n    left: 20px;\n    top: 12px;\n    color: #fff;\n    z-index: 1000;\n  }\n\n  input {\n    font-family: 'Abel', sans-serif;\n    font-size: 28px;\n    position: absolute;\n    left: 0px;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border: 0;\n    width: 95%;\n    background: transparent;\n    height: 40px;\n    color: #fff;\n    box-sizing: border-box;\n\n    :focus {\n      outline: none;\n    }\n\n    @media screen and (max-width: 720px) {\n      font-size: 28px;\n    }\n  }\n`;\n","import React, { useState, useRef } from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport PropTypes from 'prop-types'\nimport { \n  StyledSearchBar,\n  StyledSearchBarContent \n} from '../styles/StyledSearchBar';\n\nconst SearchBar = ({ callback }) => {\n  const [state, setState] = useState('');\n  const timeOut = useRef(null);\n\n  const doSearch = event => {\n    const { value } = event.target;\n    \n    clearTimeout(timeOut.current);\n    setState(value);\n\n    timeOut.current = setTimeout(() => {\n      callback(value);\n    }, 500);\n  }\n\n  return (\n    <StyledSearchBar>\n      <StyledSearchBarContent>\n        <FontAwesome className=\"fa-search\" name=\"search\" size=\"2x\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search Movie\"\n          onChange={doSearch}\n          value={state}\n        />\n      </StyledSearchBarContent>\n    </StyledSearchBar>\n  )\n}\nSearchBar.prototype = {\n  callback: PropTypes.func,\n}\nexport default SearchBar;","import styled from 'styled-components';\n\nexport const StyledGrid = styled.div`\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 0 20px;\n  h1 {\n    font-family: 'Abel', sans-serif;\n    font-size: 42px;\n\n    @media screen and (max-width: 768px) {\n      font-size: 22px;\n    }\n  }\n`;\n\nexport const StyledGridContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, minmax(100px, 1fr));\n  grid-gap: 40px;\n  position: relative;\n\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: repeat(4, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 768px) {\n    grid-template-columns: repeat(3, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 600px) {\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 375px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types'\n\nimport { StyledGrid, StyledGridContent } from '../styles/StyledGrid';\n\nconst Grid = ({ header, children }) => (\n  <StyledGrid>\n    <h1>{header}</h1>\n    <StyledGridContent>{children}</StyledGridContent>\n  </StyledGrid>\n  \n)\nGrid.propTypes = {\n  header: PropTypes.string,\n  \n}\nexport default Grid;","import styled from 'styled-components';\n\nexport const StyledMovieThumb = styled.div`\n  img {\n    width: 100%;\n    /* min-height: 340px; */\n    transition: all 0.3s;\n    object-fit: cover;\n    border-radius: 20px;\n    animation: animateMovieThumb 0.5s;\n\n    :hover {\n      opacity: 0.8;\n    }\n\n    .clickable {\n      cursor: pointer;\n    }\n\n    @keyframes animateMovieThumb {\n      from {\n        opacity: 0;\n      }\n      to {\n        opacity: 1;\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types'\nimport { StyledMovieThumb } from '../styles/StyledMovieThumb';\n\nconst MovieThumb = ({ image, movieId, clickable }) => (\n  \n  <StyledMovieThumb>\n    {clickable ? (\n      <Link to={`/React-RMDB/${movieId}`}>\n        <img className=\"clickable\" src={image} alt=\"moviethumb\" />\n      </Link>\n    ) : (\n      <img src={image} alt=\"moviethumb\" />\n    )}\n  </StyledMovieThumb>\n  \n)\nMovieThumb.prototype = {\n  image: PropTypes.string,\n  movieId: PropTypes.number,\n  clickable: PropTypes.bool,\n}\nexport default MovieThumb;\n\n","import styled from 'styled-components';\n\nexport const StyledLoadMoreBtn = styled.button`\n  background: #000;\n  width: 25%;\n  min-width: 200px;\n  height: 70px;\n  color: #fff;\n  cursor: pointer;\n  transition: all 0.3s;\n  border-radius: 40px;\n  font-family: 'Abel', sans-serif;\n  font-size: 28px;\n  max-width: 1280px;\n  display: block;\n  margin: 20px auto;\n  padding: 0 20px;\n  outline: none;\n\n  :hover {\n    opacity: 0.8;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { StyledLoadMoreBtn } from '../styles/StyledLoadMoreBtn';\n\nconst LoadMoreBtn = ({ text, callback }) => (\n  <StyledLoadMoreBtn type=\"button\" onClick={callback}>\n    {text}\n  </StyledLoadMoreBtn>\n)\nLoadMoreBtn.propTypes = {\n  text: PropTypes.string,\n  callback: PropTypes.func,\n}\nexport default LoadMoreBtn;","import styled from 'styled-components';\n\nexport const StyledSpinner = styled.div`\n  border: 5px solid #f3f3f3; /* Light grey */\n  border-top: 5px solid #16d47b; /* Blue */\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import React from 'react';\n\nimport { StyledSpinner } from '../styles/StyledSpinner';\n\nconst Spinner = () =><StyledSpinner />\n\nexport default Spinner;","import React, { useState } from 'react';\nimport {\n  POPULAR_BASE_URL,\n  SEARCH_BASE_URL,\n  POSTER_SIZE,\n  BACKDROP_SIZE,\n  IMAGE_BASE_URL,\n} from '../config';\n\n// import Components\nimport HeroImage from './elements/HeroImage';\nimport SearchBar from './elements/SearchBar';\nimport Grid from './elements/Grid';\nimport MovieThumb from './elements/MovieThumb';\nimport LoadMoreBtn from './elements/LoadMoreBtn';\nimport Spinner from './elements/Spinner';\n\n// Custom Hook\nimport { useHomeFetch } from './hooks/useHomeFetch';\n\nimport NoImage from './images/no_image.jpg';\n\nconst Home = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [\n    {\n      state: { movies, currentPage, totalPages, heroImage },\n      loading,\n      error,\n    },\n    fetchMovies,\n  ] = useHomeFetch();\n\n  const searchMovies = search => {\n    const endpoint = search ? SEARCH_BASE_URL + search : POPULAR_BASE_URL;\n\n    setSearchTerm(search);\n    fetchMovies(endpoint);\n\n  }\n\n  const loadMoreMovies = () => {\n    const searchEndpoint = `${SEARCH_BASE_URL}${searchTerm}&page=${currentPage + 1}`;\n    const popularEndpoint = `${POPULAR_BASE_URL}&page=${currentPage + 1}`;\n\n    const endpoint = searchTerm ? searchEndpoint : popularEndpoint;\n\n    fetchMovies(endpoint);\n\n  }\n\n  if (error) return <div>Something went wrong ...</div>;\n  //if (!movies[0]) return <Spinner />;\n\n  return (\n    <>\n      {(!searchTerm && movies[0]) ? (\n        <HeroImage\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\n          title={heroImage.original_title}\n          text={heroImage.overview}\n        />\n      ) : null}\n      <SearchBar callback={searchMovies} />\n      <Grid header={(searchTerm) ? 'Search Result' : 'Popular Movies'}>\n        {movies.map(movie => (\n          <MovieThumb\n            key={movie.id}\n            clickable\n            image={\n              movie.poster_path\n                ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\n                : NoImage\n            }\n            movieId={movie.id}\n            movieName={movie.original_title}\n          />\n        ))}\n      </Grid>\n      {loading && <Spinner />}\n      {currentPage < totalPages && !loading && (\n        <LoadMoreBtn text=\"Load More\" callback={loadMoreMovies} />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import { useState, useEffect } from 'react';\nimport { POPULAR_BASE_URL } from '../../config';\n\nexport const useHomeFetch = (searchTerm) => {\n  const [state, setState] = useState({ movies: [] });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const fetchMovies = async endpoint => {\n    setError(false);\n    setLoading(true);\n\n    const isLoadMore = endpoint.search('page');\n\n    try {\n      const result = await (await fetch(endpoint)).json();\n      setState(prev => ({\n        ...prev,\n        movies:\n          isLoadMore !== -1\n        ? [...prev.movies, ...result.results]\n        : [...result.results],\n        heroImage: prev.heroImage \n        || result.results[0],\n        currentPage: result.page,\n        totalPages: result.total_pages\n      }))\n\n    } catch (error) {\n      setError(true);\n      console.log(error);\n    }\n    setLoading(false);\n  }\n\n  // Fetch popular movies initially on mount\n  useEffect(() => {\n    if (sessionStorage.homeState) {\n      setState(JSON.parse(sessionStorage.homeState));\n      setLoading(false);\n    } else {\n      fetchMovies(POPULAR_BASE_URL);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!searchTerm && state.movies[0]) {\n      sessionStorage.setItem('homeState', JSON.stringify(state));\n    }\n  }, [searchTerm, state]);\n\n  return [{ state, loading, error}, fetchMovies];\n}","import styled from 'styled-components';\n\nexport const StyledNavigation = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 70px;\n  background: #353535;\n  color: #fff;\n\n  .navigation-content {\n    max-width: 1280px;\n    margin: 0 auto;\n    padding: 0 20px;\n    width: 100%;\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      float: left;\n      color: #fff;\n      padding-right: 10px;\n      text-decoration: none;\n\n      @media screen and (max-width: 768px) {\n        font-size: 16px;\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom';\nimport { StyledNavigation } from '../styles/StyledNavigation'\n\nconst Navigation = ({movie}) => {\n    return (\n    <StyledNavigation>\n        <div className='navigation-content'>\n            <Link to='/React-RMDB/'>\n                <p>Home</p>\n            </Link>\n            <p>|</p>\n            <p>{movie}</p>\n        </div>\n\n    </StyledNavigation>\n    )\n}\nNavigation.prototype = {\n    movie: PropTypes.string,\n}\nexport default Navigation;\n","import styled from 'styled-components';\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from '../../config';\n\nexport const StyledMovieInfo = styled.div`\n  background: ${props =>\n    props.backdrop\n      ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.backdrop}')`\n      : '#000'};\n  background-size: cover !important;\n  background-position: center !important;\n  width: 100%;\n  padding: 40px 20px;\n  box-sizing: border-box;\n  animation: animateMovieinfo 1s;\n\n  .movieinfo-content {\n    max-width: 1280px;\n    min-height: 450px;\n    margin: 0 auto;\n    background: rgb(0, 0, 0, 0.7);\n    border-radius: 20px;\n    position: relative;\n  }\n\n  .movieinfo-thumb {\n    width: 300px;\n    float: left;\n\n    @media screen and (max-width: 768px) {\n      width: 100% !important;\n    }\n  }\n\n  .movieinfo-text {\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 40px;\n    color: #fff;\n    overflow: hidden;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      margin: 0;\n\n      @media screen and (max-width: 1000px) {\n        font-size: 32px !important;\n      }\n    }\n\n    h3 {\n      font-size: 16px;\n      line-height: 0;\n      margin-top: 30px;\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 18px;\n      line-height: 26px;\n    }\n  }\n\n  .rating-director {\n    display: flex;\n    justify-content: flex-start;\n  }\n\n  .score {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 35px;\n    height: 35px;\n    background: #fff;\n    color: #000;\n    font-weight: 800;\n    border-radius: 25px;\n    margin: 0px 0 0 0;\n  }\n\n  .director {\n    margin: 0 0 0 40px;\n\n    p {\n      margin: 0;\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    min-height: 600px;\n    height: auto;\n  }\n\n  @keyframes animateMovieinfo {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport NoImage from '../images/no_image.jpg';\nimport {IMAGE_BASE_URL, POSTER_SIZE} from '../../config';\nimport MovieThumb from './MovieThumb';\nimport {StyledMovieInfo} from '../styles/StyledMovieInfo'\n\n\nconst MovieInfo = ({movie}) => {\n    return (\n    <StyledMovieInfo backdrop={movie.backdrop_path}>\n        <div className='movieinfo-content'>\n            <div className='movieinfo-thumb'>\n                <MovieThumb image={\n                    movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : NoImage\n                }\n                clickable={false}/>\n            </div>\n            <div className='movieinfo-text'>\n                <h1>{movie.title}</h1>\n                <h3>PLOT</h3>\n                <p>{movie.overview}</p>\n           \n            <div className='rating-director'>\n                <div>\n                    <h3>IMDB RATING</h3>\n                    <div className='score'>{movie.vote_average}</div>\n                </div>\n                <div className='director'>\n                    <h3>DIRECTOR{movie.directors.length > 1 ? 'S' : ''}</h3>\n                    {movie.directors.map(element => (\n                        <p key={element.credit_id}>{element.name}</p>\n                    ))}\n                </div>\n            </div>\n        </div>\n        </div>\n\n    </StyledMovieInfo>\n    )\n}\nMovieInfo.propTypes = {\n    movie: PropTypes.object,\n    directors: PropTypes.array,\n}\nexport default MovieInfo;\n","import styled from 'styled-components';\n\nexport const StyledMovieInfoBar = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: 100px;\n  height: auto;\n  background: #1c1c1c;\n  padding: 20px;\n  box-sizing: border-box;\n  font-family: 'Abel', sans-serif;\n  font-size: 20px;\n\n  .movieinfobar-content {\n    max-width: 1280px;\n    width: 100%;\n    margin: 0 auto;\n    color: #fff;\n  }\n\n  .movieinfobar-content-col {\n    float: left;\n    width: 33.33%;\n    box-sizing: border-box;\n    padding: 10px 20px 0 0;\n  }\n\n  .movieinfobar-info {\n    padding: 5px 0 0 10px;\n    float: left;\n  }\n\n  .fa-time,\n  .fa-revenue {\n    float: left;\n    margin-top: -4px;\n  }\n\n  .fa-budget {\n    float: left;\n    margin-top: -3px;\n  }\n\n  @media screen and (max-width: 768px) {\n    .fa-time,\n    .fa-revenue,\n    .fa-budget {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 425px) {\n    font-size: 14px;\n  }\n`;\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport {StyledMovieInfoBar} from '../styles/StyledMovieInfoBar'\nimport FontAwesome from 'react-fontawesome'\nimport {calcTime, convertMoney} from '../../helpers'\n\nconst MovieInfoBar = ({time, budget, revenue}) => {\n    return (\n        <StyledMovieInfoBar>\n            <div className='movieinfobar-content'>\n                <div className='movieinfobar-content-col'>\n                    <FontAwesome className='fa-time' name='clock-o' size='2x'/>\n                    <span className='movieinfobar-info'>\n                        Running time: {calcTime(time)}\n                    </span>\n                </div>\n\n                <div className='movieinfobar-content-col'>\n                    <FontAwesome className='fa-budget' name='money' size='2x'/>\n                    <span className='movieinfobar-info'>\n                        Budget: {convertMoney(budget)}\n                    </span>\n                </div>\n\n                <div className='movieinfobar-content-col'>\n                    <FontAwesome className='fa-revenue' name='ticket' size='2x'/>\n                    <span className='movieinfobar-info'>\n                        Revenue: {convertMoney(revenue)}\n                    </span>\n                </div>\n\n\n            </div>\n\n        </StyledMovieInfoBar>\n    )\n}\nMovieInfoBar.propTypes = {\n    time: PropTypes.number,\n    budget: PropTypes.number,\n    revenue: PropTypes.number,\n}\nexport default MovieInfoBar;\n","import styled from 'styled-components';\n\nexport const StyledActor = styled.div`\n  font-family: 'Abel', sans-serif;\n  color: #fff;\n  background: #1c1c1c;\n  border-radius: 20px;\n  padding: 5px;\n  text-align: center;\n\n  img {\n    display: block;\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    border-radius: 15px;\n  }\n\n  .actor-name {\n    display: block;\n    font-size: 18px;\n    margin: 10px 0 0 0;\n  }\n\n  .actor-character {\n    display: block;\n    font-size: 16px;\n    margin: 0 0 10px 0;\n  }\n`;\n","import React from 'react';\nimport NoImage from '../images/no_image.jpg'\nimport {IMAGE_BASE_URL, POSTER_SIZE} from '../../config'\nimport {StyledActor} from '../styles/StyledActor'\nimport PropTypes from 'prop-types'\n\nconst Actor = ({actor}) => {\n    return (\n        <StyledActor>\n            <img src={\n                actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}` : NoImage\n            } alt='actor-thumb'/>\n            <span className='actor-name'>{actor.name}</span>\n            <span className='actor-character'>{actor.character}</span>\n        </StyledActor>\n    )\n}\nActor.propTypes = {\n    actor: PropTypes.object\n}\nexport default Actor;\n","import React from 'react';\n\n// Components\nimport Navigation from './elements/Navigation';\nimport MovieInfo from './elements/MovieInfo';\nimport MovieInfoBar from './elements/MovieInfoBar';\nimport Actor from './elements/Actor';\nimport Grid from './elements/Grid';\nimport Spinner from './elements/Spinner';\n\nimport { useMovieFetch } from './hooks/useMovieFetch';\n\nconst Movie = ({ movieId }) => {\n  const [movie, loading, error] = useMovieFetch(movieId);\n \n  if (error) return <div>Something went wrong...</div>\n  if (loading) return <Spinner/>\n\n  return (\n  <>\n    <Navigation movie={movie.original_title}/>\n    <MovieInfo movie={movie}/>\n    <MovieInfoBar time={movie.runtime} budget={movie.budget} revenue={movie.revenue} />\n    <Grid header='Actors'>\n\n     {movie.actors.map(actor => (\n       <Actor key={actor.id} actor={actor}/>\n     ))}\n    </Grid>\n  </>\n  )\n};\n\nexport default Movie;","import { useState, useEffect, useCallback } from 'react';\nimport { API_URL, API_KEY } from '../../config';\nimport {useParams} from 'react-router-dom'\n\n\nexport const useMovieFetch = () => {\n  const {movieId} = useParams()\n\n  const [state, setState] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  const fetchData = useCallback(async () => {\n    setError(false);\n    setLoading(true);\n\n    try {\n      const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n      const result = await (await fetch(endpoint)).json();\n\n      const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n      const creditsResult = await (await fetch(creditsEndpoint)).json();\n      const directors = creditsResult.crew.filter(\n        member => member.job === 'Director'\n      );\n\n      setState({\n        ...result,\n        actors: creditsResult.cast,\n        directors,\n      })\n\n    } catch (error) {\n      setError(true);\n    }\n    setLoading(false);\n  }, [movieId])\n\n  useEffect(() => {\n    if (localStorage[movieId]) {\n      setState(JSON.parse(localStorage[movieId]));\n      setLoading(false);\n    } else {\n      fetchData();\n    }\n  }, [fetchData, movieId]);\n\n  useEffect(() => {\n    localStorage.setItem(movieId, JSON.stringify(state));\n  }, [movieId, state])\n\n  return [state, loading, error];\n}","import React from 'react';\n\nconst NotFound = () => <div>Whoooops ... nothing found here...</div>\n\nexport default NotFound;","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n`;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Header from './elements/Header';\nimport Home from './Home';\nimport Movie from './Movie';\nimport NotFound from './NotFound';\n\nimport { GlobalStyle } from './styles/GlobalStyle';\n\nconst App = () => (\n  <>\n    <Router>\n    <Header />\n    <Switch>\n      <Route path=\"/React-RMDB/\" exact component={Home}/>\n      <Route path=\"/React-RMDB/:movieId\" component={Movie}/>\n      <Route component={NotFound}/> \n      </Switch>     \n    </Router>\n    <GlobalStyle />\n  </>\n)\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}